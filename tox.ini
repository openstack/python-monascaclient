[tox]
envlist = py{27,35},pypy,cover,pep8
minversion = 2.5
skipsdist = True

[testenv]
setenv =
    VIRTUAL_ENV={envdir}
    OS_TEST_PATH=monascaclient/tests
    PYTHONWARNINGS=default::DeprecationWarning
passenv = *_proxy
          *_PROXY
usedevelop = True
install_command = pip install {opts} {packages}
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/queens}
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
whitelist_externals = bash
                      find
                      rm
commands =
  find {toxinidir} -type f -name "*.pyc" -delete
  rm -Rf {toxinidir}/.testrepository/times.dbm

[testenv:py27]
basepython = python2.7
commands =
  {[testenv]commands}
  ostestr {posargs}

[testenv:py35]
basepython = python3.5
commands =
  {[testenv]commands}
  ostestr {posargs}

[testenv:pypy]
basepython = pypy
commands =
  {[testenv]commands}
  ostestr {posargs}

[testenv:cover]
basepython = python2.7
commands =
  {[testenv]commands}
  coverage erase
  python setup.py test --coverage --testr-args='{posargs}' --coverage-package-name=monascaclient --omit=monascaclient/tests/*
  coverage report

[testenv:debug]
commands =
  {[testenv]commands}
  oslo_debug_helper -t {env:OS_TEST_PATH} {posargs}

[testenv:pep8]
skip_install = True
usedevelop = False
commands =
  {[testenv:flake8]commands}
  {[testenv:bandit]commands}
  {[testenv:checkniceness]commands}

[testenv:flake8]
skip_install = True
usedevelop = False
commands =
  {[testenv]commands}
  flake8 monascaclient

[testenv:bandit]
skip_install = True
usedevelop = False
commands =
  {[testenv]commands}
  bandit -r monascaclient -n5 -x {env:OS_TEST_PATH}

[testenv:docs]
description = Builds full monascaclient documentation
commands =
  {[testenv]commands}
  {[testenv:devdocs]commands}
  {[testenv:releasenotes]commands}

[testenv:devdocs]
description = Builds developer documentation
commands =
  rm -rf {toxinidir}/doc/build {toxinidir}/doc/source/contributor/api
  python setup.py build_sphinx

[testenv:releasenotes]
description = Called from CI script to test and publish the Release Notes
commands =
  rm -rf releasenotes/build
  sphinx-build -a -E -d {toxinidir}/releasenotes/build/doctrees -b html {toxinidir}/releasenotes/source {toxinidir}/releasenotes/build/html

[testenv:checkniceness]
description = Validates (pep-like) documenation
commands =
  {[testenv]commands}
  doc8 --file-encoding utf-8 {toxinidir}/doc
  doc8 --file-encoding utf-8 {toxinidir}/releasenotes

[testenv:venv]
commands = {posargs}

[hacking]
import_exceptions =
  six.moves

[flake8]
show-source = True
max-line-length = 120
builtins = _
exclude=.venv,.git,.tox,dist,client_api_example.py,*lib/python*,*egg,build
